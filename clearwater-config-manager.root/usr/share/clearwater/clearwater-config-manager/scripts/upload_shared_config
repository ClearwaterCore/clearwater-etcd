#!/bin/bash

# Copyright (C) Metaswitch Networks 2017
# If license terms are provided to you in a COPYING file in the root directory
# of the source code repository by which you are accessing this code, then
# the license outlined in that COPYING file applies to your use.
# Otherwise no rights are granted except for those provided to you by
# Metaswitch Networks in a separate written agreement.

FILENAME=/etc/clearwater/shared_config
local_site_name=site1
etcd_key=clearwater
. /etc/clearwater/config

[ $# -le 1 ] || { echo "Usage: upload_shared_config [--force]" >&2 ; exit 2 ; }

. /usr/share/clearwater/utils/check-root-permissions 1

force=false
if [ -n "$1" ];
then
  first_val=$1
  if [ $first_val == "--force" ]
  then
    force=true
  else
    echo "Usage: upload_shared_config [--force]"
    exit 2
  fi
fi

# Check we can contact `etcd`
if ! nc -z ${management_local_ip:-$local_ip} 4000
then
  echo "The Clearwater Configuration store (etcd) is not running"
  echo "Please start it before uploading configuration"
  exit 2
fi

# Check that the file is already present. The config file should either be put
# in place by the user, or created by the plugin at startup if it finds both
# the file and etcd key missing. If it does not exist, the disk may have been
# full, or some other error may have occured.
if [[ ! -f $FILENAME ]]
then
  echo "No shared configuration detected at $FILENAME, unable to upload."
  exit 2
fi

# Run any config validation scripts (either native or supplied by an integrator)
any_scripts=$(ls /usr/share/clearwater/clearwater-config-manager/scripts/config_validation/* 2> /dev/null)
if [ "$any_scripts" != "" ]
then
  echo "Validating /etc/clearwater/shared_config"
  ignored_error=false
  for script in /usr/share/clearwater/clearwater-config-manager/scripts/config_validation/*
  do
    if [ -x "$script" ]
    then
      # Script is executable.  Run it
      "$script"
      rc=$?

      # Check the return code and abort if appropriate.
      if [ $rc != 0 ]
      then
        # Abort unless forcing
        if $force
        then
          ignored_error=true
        else
          echo "Validation of /etc/clearwater/shared_config failed - aborting upload"
          exit $rc
        fi
      fi
    fi
  done

  if $ignored_error
  then
    echo "Validation of /etc/clearwater/shared_config failed - continuing upload"
  else
    echo "Validation of /etc/clearwater/shared_config succeeded"
  fi
fi

# Fill out audit log with changes to shared_config
keypath=http://${management_local_ip:-$local_ip}:4000/v2/keys/$etcd_key/$local_site_name/configuration/shared_config
python /usr/share/clearwater/clearwater-config-manager/scripts/log_shared_config.py $keypath

# Upload the file to etcd
curl -X PUT $keypath --data-urlencode value@$FILENAME 2> /tmp/upload-shared-config.stderr.$$ | tee /tmp/upload-shared-config.stdout.$$ | egrep -q "\"action\":\"set\""
rc=$?

# Check the return code and log if appropriate.
if [ $rc != 0 ] ; then
  echo Upload shared configuration failed to $keypath  >&2
  cat /tmp/upload-shared-config.stderr.$$              >&2
  cat /tmp/upload-shared-config.stdout.$$              >&2
fi
rm -f /tmp/upload-shared-config.stderr.$$ /tmp/upload-shared-config.stdout.$$

# Add this node to the list of nodes to restart
/usr/share/clearwater/clearwater-queue-manager/scripts/modify_nodes_in_queue add apply_config

# Set the force value
if $force
then
  /usr/share/clearwater/clearwater-queue-manager/scripts/modify_nodes_in_queue force_true apply_config
else
  /usr/share/clearwater/clearwater-queue-manager/scripts/modify_nodes_in_queue force_false apply_config
fi

exit $rc
